name: Build Doxygen and Deploy to GitHub Pages

permissions:
  actions: read
  contents: write
  pages: write
  issues: write
  pull-requests: write

on:
  push:
    branches:
      - Deploy-branch-Awsome-CSS
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      DOXYGEN_VERSION: 1.11.0
      DOXYGEN_AWESOME_VERSION: 2.3.3
      PR_PATH: pr-preview/${{ github.event.number }}
      DOMAIN: ${{ github.actor }}.github.io
      DEPLOYMENT: '<img src="https://github.com/user-attachments/assets/f94fada5-45ca-4271-9106-180728235ad2" alt="Rocket" width="25"/>'
      CELEBRATION: '<img src="https://github.com/user-attachments/assets/86eb8470-c597-4f8b-a77d-a54036075271" alt="githubloading" width="25"/>'
      FAILURE_ICON: '<img src="https://github.com/user-attachments/assets/af921ba9-953d-465e-b597-64ed0a2dc921" alt="failed" width="25"/>'
      COMMENT_IDENTIFIER: '<!-- preview-comment -->'

    concurrency: ci-${{ github.ref }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Find Existing Comment
        if: ${{ github.event_name == 'pull_request_target' }}
        id: find-comment
        uses: peter-evans/find-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: ${{ env.COMMENT_IDENTIFIER }}

      - name: Post Initial Comment
        if: ${{ github.event_name == 'pull_request_target' && steps.find-comment.outputs.comment-id == '' }}
        id: post-initial-comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            **Deployment of preview started...** ${{ env.DEPLOYMENT }}
            ${{ env.COMMENT_IDENTIFIER }}
          reactions: rocket

      - name: Update Comment to In-Progress
        if: ${{ github.event_name == 'pull_request_target' && steps.find-comment.outputs.comment-id != '' }}
        id: update-in-progress-comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            **Updated Deployment in progress...** ${{ env.DEPLOYMENT }}
            ${{ env.COMMENT_IDENTIFIER }}
          reactions: rocket
          edit-mode: replace

      - name: Install Clang
        run: |
          sudo apt-get update
          sudo apt-get install -y clang

      - name: Install Doxygen
        run: |
          wget https://github.com/doxygen/doxygen/releases/download/Release_${DOXYGEN_VERSION//./_}/doxygen-${DOXYGEN_VERSION}.linux.bin.tar.gz
          tar xzvf doxygen-${{ env.DOXYGEN_VERSION }}.linux.bin.tar.gz
          cd doxygen-${{ env.DOXYGEN_VERSION }}
          sudo make install
          cd ..
          rm -rf doxygen-${{ env.DOXYGEN_VERSION }}*

      - name: Install Graphviz
        run: sudo apt-get install graphviz -y

      - name: Clone Doxygen Awesome CSS Themes
        working-directory: ./docs/doxygen
        run: |
          git clone --depth 1 -b v${{ env.DOXYGEN_AWESOME_VERSION }} https://github.com/jothepro/doxygen-awesome-css awesome_css

      - name: Generate Doxygen Documentation
        run: |
          cd docs/doxygen
          doxygen doxygen.cfg

      - name: Create .nojekyll
        run: |
          cd docs/doxygen/build/html
          touch .nojekyll

      - name: Deploy to GitHub Pages (Main Branch)
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/Deploy-branch-Awsome-CSS' }}
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages
          folder: docs/doxygen/build/html
          clean: true
          clean-exclude: |
            pr-preview/

      - name: Deploy to PR preview
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages
          folder: docs/doxygen/build/html
          target-folder: ${{ env.PR_PATH }}
          clean: false

      - name: Update Comment with Preview Link
        if: ${{ github.event_name == 'pull_request_target' && steps.find-comment.outputs.comment-id != '' }}
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ${{ env.CELEBRATION }} **A preview of this PR is available at:** [Preview Link](https://${{ env.DOMAIN }}/${{ github.event.repository.name }}/${{ env.PR_PATH }}/) 
            ðŸ“‚ **View the source code here:** [View Source Code](https://github.com/${{ github.repository }}/tree/gh-pages/pr-preview/${{ github.event.pull_request.number }})
            ðŸ”§ **Commit used for deployment:** [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
            ${{ env.COMMENT_IDENTIFIER }}
          reactions: hooray
          edit-mode: replace          

      - name: Post Failure Comment
        if: ${{ github.event_name == 'pull_request_target' && failure() }}
        uses: actions/github-script@v6
        with:
          script: |
            const { context } = require('@actions/github');
            const issue_number = context.payload.pull_request.number;
            const commentIdentifier = process.env.COMMENT_IDENTIFIER;
            const body = `
              **Deployment failed.** ${process.env.FAILURE_ICON}
              ${commentIdentifier}
              <br>
              ðŸ”— **View the workflow run logs:** [Logs](${context.run.html_url})
            `;

            const existingComment = steps.find-comment.outputs.comment-id;
            if (existingComment) {
              await github.rest.issues.updateComment({
                ...context.repo,
                comment_id: existingComment,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                ...context.repo,
                issue_number,
                body: body
              });
            }

